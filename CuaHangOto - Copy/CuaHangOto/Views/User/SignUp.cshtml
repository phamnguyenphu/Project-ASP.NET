@model CuaHangOto.Models.Customer_info

@{
    Layout = null;
}

<!DOCTYPE html>


<html lang="en">
<head>

    <title>Registration</title>
    <!-- Required meta tags-->
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="Colorlib Templates">
    <meta name="author" content="Colorlib">
    <meta name="keywords" content="Colorlib Templates">

    <!-- Title Page-->
    <title>Au Register Forms by Colorlib</title>

    <!-- Icons font CSS-->
    <link href="~/Themes/SignUp/vendor/mdi-font/css/material-design-iconic-font.min.css" rel="stylesheet" media="all">
    <link href="~/Themes/SignUp/vendor/font-awesome-4.7/css/font-awesome.min.css" rel="stylesheet" media="all">
    <!-- Font special for pages-->
    <link href="https://fonts.googleapis.com/css?family=Poppins:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i,800,800i,900,900i" rel="stylesheet">

    <!-- Vendor CSS-->
    <link href="~/Themes/SignUp/vendor/select2/select2.min.css" rel="stylesheet" media="all">
    <link href="~/Themes/SignUp/vendor/datepicker/daterangepicker.css" rel="stylesheet" media="all">

    <!-- Main CSS-->
    <link href="~/Themes/SignUp/css/main.css" rel="stylesheet" media="all">
</head>
<body>
    <div class="page-wrapper bg-gra-01 p-t-180 p-b-100 font-poppins">

        @Html.AntiForgeryToken()
        <div class="wrapper wrapper--w780">
            <div class="card card-3">
                <div class="card-heading"></div>
                <div class="card-body">
                    <h2 class="title">Registration Info</h2>
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <form method="post" action="">
                        <div class="input-group">
                            @*<input class="input--style-3" type="text" placeholder="Name" name="name">*@
                            @Html.EditorFor(model => model.nameCustomer, new { htmlAttributes = new { @class = "input--style-3", @type = "text", @placeholder = "Name", @name = "name" } })
                            @Html.ValidationMessageFor(model => model.nameCustomer, "", new { @class = "text-danger" })

                        </div>
                        <div class="input-group">
                            @*<input class="input--style-3 js-datepicker" type="text" placeholder="Birthdate" name="birthday">*@
                            @Html.EditorFor(model => model.birthCustomer, new { htmlAttributes = new { @class = "input--style-3 js-datepicker", @type = "text", @placeholder = "Birthdate", @name = "birthday" } })
                            <i class="zmdi zmdi-calendar-note input-icon js-btn-calendar"></i>
                        </div>
                        <div class="input-group">
                            <div class="rs-select2 js-select-simple select--no-search">
                                <select name="gender">
                                    <option disabled="disabled" selected="selected">Gender</option>
                                    <option>Male</option>
                                    <option>Female</option>
                                    <option>Other</option>
                                </select>
                                <div class="select-dropdown"></div>
                                @*@Html.EditorFor(model => model.sexCustomer, new { htmlAttributes = new { @class = "select-dropdown" } })*@
                            </div>
                        </div>
                        <div class="input-group">
                            @*<input class="input--style-3" type="email" placeholder="Email" name="email">*@
                            @Html.EditorFor(model => model.emailCustomer, new { htmlAttributes = new { @class = "input--style-3", @type = "email", @placeholder = "Email", @name = "email" } })


                        </div>
                        <div class="input-group">
                            @*<input class="input--style-3" type="text" placeholder="Phone" name="phone">*@
                            @Html.EditorFor(model => model.phoneNumberCustomer, new { htmlAttributes = new { @class = "input--style-3", @type = "text", @placeholder = "Phone", @name = "phone" } })
                        </div>
                        <div class="p-t-10">
                            <button class="btn btn--pill btn--green" type="submit">Submit</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Jquery JS-->
    <script src="~/Themes/SignUp/vendor/jquery/jquery.min.js"></script>
    <!-- Vendor JS-->
    <script src="~/Themes/SignUp/vendor/select2/select2.min.js"></script>
    <script src="~/Themes/SignUp/vendor/datepicker/moment.min.js"></script>
    <script src="~/Themes/SignUp/vendor/datepicker/daterangepicker.js"></script>

    <!-- Main JS-->
    <script src="~/Themes/SignUp/js/global.js"></script>

    @*@using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Customer_info</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.nameCustomer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.nameCustomer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.nameCustomer, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.birthCustomer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.birthCustomer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.birthCustomer, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.sexCustomer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.sexCustomer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.sexCustomer, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.phoneNumberCustomer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.phoneNumberCustomer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.phoneNumberCustomer, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.emailCustomer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.emailCustomer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.emailCustomer, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.addressCustomer, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.addressCustomer, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.addressCustomer, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btn btn-default" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>*@
    @section scripts{
        @Scripts.Render("~/bundles/jqueryval")
    }
</body>
</html>
